package pbservice

const (
	OK             = "OK"
	ErrNoKey       = "ErrNoKey"
	ErrWrongServer = "ErrWrongServer"
)

type Err string

// Put or Append
type PutAppendArgs struct {
	Key   string
	Value string
	// You'll have to add definitions here.

	Op string
	ID int64

	// Field names must start with capital letters,
	// otherwise RPC will break.

	// client UUID to identify request
}

type PutAppendReply struct {
	Err Err
}

type GetArgs struct {
	Key string
	// You'll have to add definitions here.
	//random UUID generated by client to identify request
	ID int64
}

type GetReply struct {
	Err   Err
	Value string
}

// Your RPC definitions here.

// RPC to send key/val map and executed UUID map to new backup

// RPC to send updates to backup and receive errors
//may need some additional state for this to prevent out of order if communication issues
//such as monotonically increasing id for these updates or just retry until backup responds
type DataToBackupArgs struct {
	MyData   map[string]string
	PastReqs map[int64]KeyVal
}

type DataToBackupReply struct {
	Err Err
}
